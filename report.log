2020-08-17 16:40:14,622 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:40:14,836 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:41:14,377 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:41:14,584 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:44:32,328 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:44:32,536 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:45:31,229 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:45:31,425 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:46:48,963 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:46:49,323 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:48:19,477 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:48:19,688 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:49:09,739 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:49:09,971 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:49:58,271 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:49:58,510 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:50:59,452 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:50:59,708 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:51:42,507 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:51:42,742 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:53:50,773 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:53:50,988 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:55:32,067 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:55:32,294 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:56:26,893 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:56:27,204 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:57:30,564 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:57:30,796 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:58:07,553 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:58:07,760 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:58:57,107 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:58:57,299 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 16:59:56,748 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 16:59:56,981 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 17:11:42,872 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 17:11:43,116 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 17:12:48,066 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 17:12:48,265 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 17:13:52,884 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 17:13:53,086 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 17:15:22,505 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 17:15:22,777 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:39:06,909 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:39:07,324 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:39:19,122 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:39:21,102 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.7728819251060486, best pos: [ 1.858706    2.74305341  0.90327338  0.69056762  0.59606105 -1.92245678
 -0.14318155]
2020-08-17 19:48:07,406 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:48:07,691 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:48:12,412 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:48:14,490 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.86312735080719, best pos: [ 0.70658034  1.67907251  0.27078193  0.37055307  0.51480736  0.50708891
 -0.26425157]
2020-08-17 19:50:01,366 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:50:01,561 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:50:21,500 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:50:23,429 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.753422498703003, best pos: [ 0.95654608  1.37430812  0.61858531  0.40659341  0.32104304 -0.60477668
  0.12189322]
2020-08-17 19:51:39,727 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:51:39,974 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:51:53,281 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:51:55,266 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7217050790786743, best pos: [0.90222982 1.21472072 0.86921062 0.31667634 0.30635543 0.08025736
 0.34080477]
2020-08-17 19:51:55,274 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:51:57,208 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.621970534324646, best pos: [0.96641507 1.30739014 0.52408119 0.75996786 0.30115771 1.04295124
 0.04724898]
2020-08-17 19:51:57,216 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:51:59,142 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6206737756729126, best pos: [0.95199995 1.29583648 0.51978408 0.76152249 0.28911501 1.04258812
 0.05736024]
2020-08-17 19:51:59,150 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:01,203 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6215263605117798, best pos: [0.91245983 1.27468945 0.54004157 0.78089056 0.28341828 1.05057098
 0.03906385]
2020-08-17 19:52:01,211 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:03,150 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.623362421989441, best pos: [0.89714248 1.22649822 0.50367702 0.70888428 0.27482039 0.96183452
 0.0210524 ]
2020-08-17 19:52:03,158 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:05,080 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.625947117805481, best pos: [0.9081197  1.21129904 0.58940732 0.72397622 0.27655239 0.95874858
 0.03394565]
2020-08-17 19:52:05,089 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:07,029 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.621358036994934, best pos: [0.90869676 1.25929756 0.5227852  0.75474938 0.27584183 1.03710065
 0.04054389]
2020-08-17 19:52:07,037 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:08,978 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.712875485420227, best pos: [0.81595701 1.09038603 0.77666852 0.25326713 0.22547783 0.14682794
 0.3442295 ]
2020-08-17 19:52:08,986 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:10,919 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6297756433486938, best pos: [0.92619551 1.25214676 0.53118071 0.77468715 0.2577057  1.05571037
 0.15868831]
2020-08-17 19:52:10,927 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:12,962 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6398342847824097, best pos: [0.90611741 1.13181874 0.60937421 0.63089472 0.22496872 0.84762442
 0.13691866]
2020-08-17 19:52:48,573 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:52:48,806 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:52:54,807 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:56,699 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6980009078979492, best pos: [ 0.80094604  1.83686692  0.21387678  0.33763869  0.44206417  1.08864789
 -0.21567456]
2020-08-17 19:52:56,707 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:52:59,219 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5773050785064697, best pos: [ 1.18105794  1.90291584  0.52685174  0.53809345  0.55982673 -0.39375926
 -0.05565885]
2020-08-17 19:52:59,229 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:01,247 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5882624387741089, best pos: [ 1.06056065  1.57150183  0.53579362  0.47367322  0.40796789 -0.48818822
  0.05549319]
2020-08-17 19:53:01,256 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:03,235 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5743812322616577, best pos: [ 1.15186374  1.74102856  0.55331534  0.52255128  0.46680137 -0.49884115
  0.0017785 ]
2020-08-17 19:53:03,244 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:05,305 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5803182125091553, best pos: [ 1.08993223  1.6785915   0.55185089  0.51033022  0.45989875 -0.48511666
  0.00505585]
2020-08-17 19:53:05,314 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:07,268 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6731579303741455, best pos: [ 0.07570567  1.91315785 -0.42183593 -0.36422737  0.28794378  1.31204586
 -0.23934593]
2020-08-17 19:53:07,277 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:09,237 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7080554962158203, best pos: [ 0.9243812   1.88625878  0.3480986   0.44559571  0.49360804  1.0689476
 -0.19882067]
2020-08-17 19:53:09,245 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:11,214 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7214164733886719, best pos: [ 0.5542037   1.58753778  0.01421556  0.13491309  0.29936606  1.0103734
 -0.209146  ]
2020-08-17 19:53:11,222 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:13,186 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.41030346 -3.56243503 -1.71462028 -2.96520094 -3.59536653  1.99866918
  1.62142244]
2020-08-17 19:53:13,195 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:53:15,280 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.35235206 -2.83950096 -1.61901119 -1.74187675 -2.79884516  2.03146707
  1.02412327]
2020-08-17 19:58:18,897 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:58:19,125 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:58:23,185 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:25,125 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0988181829452515, best pos: [ 1.54253974  1.95375531  1.02979108  0.75018288  0.57131608 -0.78642352
  0.256066  ]
2020-08-17 19:58:25,133 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:27,056 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1399633884429932, best pos: [ 1.22452326  1.49936005  0.75185155  0.62918416  0.42296984 -0.69120176
  0.18552349]
2020-08-17 19:58:27,064 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:29,085 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1221632957458496, best pos: [ 1.32433314  1.6419002   0.88964836  0.65144543  0.49685993 -0.67439603
  0.19646415]
2020-08-17 19:58:29,093 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:31,131 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1179343461990356, best pos: [ 1.362687    1.7239815   0.86090662  0.66978832  0.45412369 -0.77616498
  0.22957731]
2020-08-17 19:58:31,139 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:33,125 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3290365934371948, best pos: [ 1.32516572  2.73385525  0.28677091  0.77752167  0.95025463  1.81442337
 -0.71651835]
2020-08-17 19:58:33,133 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:35,102 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1215291023254395, best pos: [ 1.30086411  1.70545136  0.82037474  0.67114906  0.40760938 -0.7408038
  0.26399728]
2020-08-17 19:58:35,110 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:37,061 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1203584671020508, best pos: [ 1.29555227  1.70890501  0.84745331  0.66279629  0.40882492 -0.70645426
  0.25789436]
2020-08-17 19:58:37,069 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:39,021 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.1659334897994995, best pos: [ 1.04386341  1.39756844  0.68087488  0.53066408  0.3117107  -0.54055501
  0.18257464]
2020-08-17 19:58:39,029 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:41,003 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.0974373817443848, best pos: [ 1.60914736  2.07700215  1.11337585  0.82064064  0.62546531 -0.76078049
  0.29666815]
2020-08-17 19:58:41,012 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:58:43,082 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3351809978485107, best pos: [ 1.31012297  2.56736195  0.31743539  0.7122271   0.94072178  1.64788287
 -0.64145578]
2020-08-17 19:59:32,398 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 19:59:32,696 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 19:59:38,223 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:40,138 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.3794491291046143, best pos: [ 1.38104904  2.80457532  0.54671561  0.68443007  0.70472199  1.39418354
 -0.29901866]
2020-08-17 19:59:40,146 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:42,169 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4631774425506592, best pos: [ 1.05072069  1.88566199  0.73328247  0.53996415  0.43379729 -0.49267277
  0.11186118]
2020-08-17 19:59:42,177 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:44,116 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4662635326385498, best pos: [ 0.88981062  1.62934355  0.67563697  0.42283665  0.3349231  -0.40676493
  0.16339602]
2020-08-17 19:59:44,125 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:46,022 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4575822353363037, best pos: [ 0.95210369  1.63326048  0.66128389  0.48984147  0.38830561 -0.52806405
  0.12011153]
2020-08-17 19:59:46,030 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:48,064 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4369747638702393, best pos: [ 1.11960578  2.3672092   0.62006914  0.63626664  0.57902324  1.04010161
 -0.29819472]
2020-08-17 19:59:48,072 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:49,943 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5000340938568115, best pos: [ 0.93352821  1.94143062  0.47565536  0.53954532  0.44521807  0.815582
 -0.22872816]
2020-08-17 19:59:49,951 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:51,848 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4645335674285889, best pos: [ 1.06369521  1.91587183  0.76138919  0.55334684  0.41482201 -0.54596513
  0.1434372 ]
2020-08-17 19:59:51,856 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:53,719 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4622340202331543, best pos: [ 0.95431478  1.54912373  0.60779278  0.49434733  0.34625133 -0.47564007
  0.10678236]
2020-08-17 19:59:53,728 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:55,606 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5391249656677246, best pos: [ 1.01221064  1.46766716  0.89548802  0.56197926  0.40266694 -0.44395317
  0.22346928]
2020-08-17 19:59:55,614 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 19:59:57,559 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.4491088390350342, best pos: [ 1.13918588  2.53399415  0.50149179  0.61000041  0.61507865  0.96170362
 -0.3155171 ]
2020-08-17 20:01:07,914 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 20:01:08,106 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 20:01:12,776 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:14,726 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5275179147720337, best pos: [ 1.17754177  1.40460025  0.52285537  0.49992369  0.5108359  -0.81811816
  0.04071127]
2020-08-17 20:01:14,735 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:16,609 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.532015323638916, best pos: [ 1.26313854  1.41263428  0.578043    0.56705716  0.52654541 -0.84941311
  0.05138342]
2020-08-17 20:01:16,620 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:18,566 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6561731100082397, best pos: [1.46451507 1.65145054 1.18732827 0.90891386 0.55696511 0.47189294
 0.15042045]
2020-08-17 20:01:18,575 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:20,488 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6521764993667603, best pos: [1.39369825 1.55550332 1.10669682 0.86264963 0.48479887 0.42776237
 0.17331011]
2020-08-17 20:01:20,496 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:22,494 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6561263799667358, best pos: [1.20102296 1.21486504 0.92936781 0.75796828 0.30721466 0.45616051
 0.19004649]
2020-08-17 20:01:22,502 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:24,584 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5297764539718628, best pos: [ 1.10309587  1.34147779  0.46397501  0.45299175  0.46296865 -0.76104485
  0.03965111]
2020-08-17 20:01:24,593 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:27,105 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.662156105041504, best pos: [1.54165562 1.68865279 1.23180416 0.95834155 0.55364425 0.54524139
 0.20306518]
2020-08-17 20:01:27,115 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:29,357 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6701372861862183, best pos: [1.3113442  1.33716656 1.11835686 0.89146288 0.37573326 0.71107602
 0.27842953]
2020-08-17 20:01:29,365 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:31,359 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6532747745513916, best pos: [1.39573048 1.54916917 1.12759785 0.84773215 0.4834772  0.44054946
 0.19352586]
2020-08-17 20:01:31,370 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:01:33,481 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6538017988204956, best pos: [1.24911499 1.29002383 0.99550033 0.79349045 0.33961062 0.52235622
 0.20294305]
2020-08-17 20:12:23,233 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 20:12:23,435 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 20:12:28,640 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:30,646 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.0934821   3.67207988  1.33978545  1.42744886  1.22797936 -1.396016
 -0.26876917]
2020-08-17 20:12:30,654 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:32,597 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.48587376  2.44189265  1.45445278  1.68351055  0.21640656 -2.00997883
  1.14239786]
2020-08-17 20:12:32,605 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:34,549 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.73612104  2.04920909  1.46356557  1.09478678  0.86065099 -0.85254943
  0.07658582]
2020-08-17 20:12:34,557 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:36,590 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.48123681  2.60292174  1.75747575  1.87410301  0.82709212 -0.34278398
  0.21194245]
2020-08-17 20:12:36,599 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:38,539 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.44559663  1.87558366  1.01063293  0.91331981  0.61094278 -0.78461611
  0.1363231 ]
2020-08-17 20:12:38,547 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:40,477 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.67263878  2.04631689  0.95153517  0.83007993  0.43380495 -0.95894077
  0.15933534]
2020-08-17 20:12:40,485 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:42,506 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 4.99207791  4.83831789  4.14078407  3.90381214  1.16499978 -0.86272713
 -0.14484988]
2020-08-17 20:12:42,514 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:44,463 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.008766606450080872, best pos: [ 1.31437444  1.94817259  0.93562188  0.64540398  0.5898337  -0.86934604
  0.08406795]
2020-08-17 20:12:44,471 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:46,426 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [3.7309504  4.0783037  2.99179876 2.80864662 1.58676546 0.01473444
 0.7701135 ]
2020-08-17 20:12:46,434 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:12:48,488 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.3864914   3.42430582  2.17924728  1.652804    1.64732689 -0.24073713
 -0.30527003]
2020-08-17 20:14:24,171 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 20:14:24,424 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 20:14:40,619 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:42,892 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5921745300292969, best pos: [ 1.1626193   1.56187716  0.7811766   0.88768358  0.53589009 -0.48053046
  0.12970212]
2020-08-17 20:14:42,900 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:44,858 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5997899770736694, best pos: [ 1.09873848  1.31385361  0.65850732  0.89360098  0.34633754 -0.51110973
  0.26194546]
2020-08-17 20:14:44,867 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:46,818 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6054643392562866, best pos: [ 0.9770692   1.28251876  0.54405127  0.7298681   0.3480852  -0.57550435
  0.1854179 ]
2020-08-17 20:14:46,826 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:48,809 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5991801023483276, best pos: [ 1.00900538  1.35627773  0.59520828  0.76968117  0.42134073 -0.45618585
  0.10091632]
2020-08-17 20:14:48,817 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:50,883 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5945883989334106, best pos: [ 1.02762357  1.27824717  0.64337259  0.79033375  0.36329727 -0.45082956
  0.15148684]
2020-08-17 20:14:50,891 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:52,835 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6624938249588013, best pos: [ 0.75641451  1.04441337  0.41164991  0.49986923  0.26006186 -0.26066252
  0.07530878]
2020-08-17 20:14:52,843 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:54,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.595028042793274, best pos: [ 1.16746078  1.47556238  0.78504998  0.91183026  0.46561234 -0.5679975
  0.17024643]
2020-08-17 20:14:54,808 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:56,800 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6288056373596191, best pos: [ 1.16201998  1.59645002  0.82270988  0.89008636  0.54629928 -0.14452976
  0.12335704]
2020-08-17 20:14:56,808 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:14:58,773 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.5950556993484497, best pos: [ 1.19735086  1.52803754  0.78649032  0.97290362  0.50012839 -0.54776632
  0.22020219]
2020-08-17 20:14:58,782 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:00,829 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.6006218194961548, best pos: [ 1.23293097  1.60161126  0.92189831  0.91896448  0.57377646 -0.53214858
  0.20757907]
2020-08-17 20:15:45,572 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 20:15:45,754 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 20:15:49,410 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:51,442 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.785361409187317, best pos: [ 0.4702605   1.62229609  0.04031656  0.13879748  0.37433437  1.10918994
 -0.33552213]
2020-08-17 20:15:51,452 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:53,441 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.797560453414917, best pos: [ 0.22478158  1.42998466 -0.11994728 -0.08780008  0.15733018  1.04602929
 -0.17453289]
2020-08-17 20:15:53,449 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:55,911 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.8591523170471191, best pos: [ 0.08585625  1.17307276 -0.23834311 -0.1073123   0.02338831  1.0007494
 -0.13893784]
2020-08-17 20:15:55,925 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:57,820 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7827180624008179, best pos: [ 0.42669651  1.53064177 -0.01601916  0.09004577  0.28659229  1.04490467
 -0.27679789]
2020-08-17 20:15:57,828 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:15:59,824 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.781717300415039, best pos: [ 0.46523947  1.60723331  0.01798971  0.12241938  0.32731143  1.08404822
 -0.28536572]
2020-08-17 20:15:59,832 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:16:01,706 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7891212701797485, best pos: [ 0.39723039  1.47202005 -0.01518071  0.08671866  0.2831887   0.94879165
 -0.27347293]
2020-08-17 20:16:01,714 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:16:03,586 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.783028483390808, best pos: [ 0.4052511   1.5129716  -0.01589677  0.07746574  0.28772265  1.06674835
 -0.25095334]
2020-08-17 20:16:03,594 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:16:05,495 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7941343784332275, best pos: [ 0.19661281  1.45652547 -0.16988582 -0.07682201  0.14914575  1.13204322
 -0.26743563]
2020-08-17 20:16:05,504 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:16:07,468 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7879256010055542, best pos: [ 0.4714204   1.56732159  0.02803312  0.13937223  0.3102982   1.07479085
 -0.22785579]
2020-08-17 20:16:07,477 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:16:09,536 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7878779172897339, best pos: [ 0.31970438  1.52339475 -0.08646977 -0.02645667  0.26438798  1.03581925
 -0.27721996]
2020-08-17 20:24:46,823 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-17 20:24:47,159 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-17 20:24:53,006 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:24:55,058 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.704175591468811, best pos: [ 1.15631679  1.63919963  0.71323052  0.78329526  0.62401114 -0.5848437
 -0.01198418]
2020-08-17 20:24:55,069 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:24:57,743 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.705856204032898, best pos: [ 1.1188361   1.54655387  0.72747624  0.76376     0.56459764 -0.60618946
  0.11296073]
2020-08-17 20:24:57,757 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:00,258 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.74602593 -5.92609083 -1.15315177 -1.32234231 -7.56550815 -5.15601466
  4.31746999]
2020-08-17 20:25:00,266 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:02,331 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7172743082046509, best pos: [ 0.97641312  1.34720966  0.58674438  0.63882511  0.44439951 -0.5649114
  0.08486074]
2020-08-17 20:25:02,339 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:04,332 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7031126022338867, best pos: [ 1.13169609  1.56822404  0.69181808  0.7719516   0.57786081 -0.63877432
  0.03156705]
2020-08-17 20:25:04,340 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:06,297 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7625067234039307, best pos: [ 0.99200498  1.72661116  0.49108402  0.63364866  0.62803041 -0.24433205
 -0.1876558 ]
2020-08-17 20:25:06,305 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:08,272 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7202656269073486, best pos: [ 1.02127051  1.61561083  0.63063115  0.6844173   0.61882262 -0.49639971
 -0.08077379]
2020-08-17 20:25:08,280 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:10,202 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7312543392181396, best pos: [ 0.89913842  1.2202852   0.50858232  0.57307737  0.3597687  -0.53263911
  0.07524788]
2020-08-17 20:25:10,211 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:12,141 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.7049323320388794, best pos: [ 1.26111218  1.76161199  0.79036786  0.90036601  0.70247293 -0.72770666
  0.05506079]
2020-08-17 20:25:12,149 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-17 20:25:14,215 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.975150227546692, best pos: [ 0.64446422  1.38288466  0.32200017  0.26421404  0.32741365  0.68935186
 -0.07897199]
2020-08-18 09:14:33,298 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:14:33,570 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:14:42,337 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:44,356 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.899714708328247, best pos: [ 1.01827352  1.37896809  0.72935739  0.43760374  0.46675164 -0.4713451
  0.12454619]
2020-08-18 09:14:44,364 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:46,331 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.901614785194397, best pos: [ 0.97624598  1.30697956  0.70324743  0.39518363  0.40925769 -0.44895886
  0.13986726]
2020-08-18 09:14:46,340 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:48,298 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.919790506362915, best pos: [ 0.9158294   1.35749422  0.60872834  0.33329079  0.36849157 -0.35546543
  0.09593264]
2020-08-18 09:14:48,307 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:50,288 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.9466174840927124, best pos: [ 0.77790678  1.29098967  0.44787741  0.26403572  0.3272439  -0.31724084
  0.05339648]
2020-08-18 09:14:50,296 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:52,613 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.9029892683029175, best pos: [ 0.98498745  1.35449486  0.69184599  0.3830691   0.43155501 -0.49911938
  0.13580457]
2020-08-18 09:14:52,622 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:54,698 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.008009910583496, best pos: [-0.81847034  0.78887025 -0.58247964 -0.44495032 -0.57243592  1.05333747
 -0.15709805]
2020-08-18 09:14:54,706 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:56,691 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.902779221534729, best pos: [ 0.95428896  1.28682112  0.68556838  0.39103746  0.40768684 -0.45608157
  0.13789385]
2020-08-18 09:14:56,700 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:14:58,734 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.021918296813965, best pos: [-0.55247986  0.50795671 -0.81404205 -0.52403485 -0.72681807  0.90255436
 -0.03663106]
2020-08-18 09:14:58,743 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:15:00,863 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 1.9031554460525513, best pos: [ 0.97606023  1.29347089  0.72514466  0.39662621  0.4245117  -0.44814719
  0.16548784]
2020-08-18 09:15:00,871 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:15:02,970 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 2.003957509994507, best pos: [-0.72576331  0.73229264 -0.57523158 -0.41508377 -0.56238598  0.95592735
 -0.11582345]
2020-08-18 09:19:31,995 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:19:32,203 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:19:40,173 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:42,195 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.10629055 -0.57734547 -2.49692867 -1.19539204 -0.33810919  0.44300357
 -0.49090213 -0.22055486  0.05202956 -1.67775623 -1.19497991 -0.73248389]
2020-08-18 09:19:42,207 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:44,161 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.66200954 -2.066428   -1.04215092 -2.21660634  0.06009575 -1.07304822
  0.88604287 -1.23658377 -5.20400416 -0.49054028  0.02722665 -2.91729031]
2020-08-18 09:19:44,172 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:46,126 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.86096467  0.50298004 -1.32086137 -1.20093819 -0.35429213 -0.93043736
 -1.35390935 -0.68899492 -2.01167813 -0.91569646 -0.03219778 -1.91159074]
2020-08-18 09:19:46,137 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:48,092 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.26786453 -0.14740641 -0.52201187 -0.81708474 -0.7953765   0.18116832
 -0.06992367 -0.91069025 -0.87155463 -0.0273553  -0.8676414  -1.08129153]
2020-08-18 09:19:48,102 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:50,142 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.02169162 -0.14714249 -3.70625451 -2.35327898 -0.12012354 -0.96718331
 -0.34103593 -2.4979444  -0.89815276 -2.37660776  0.25788543 -3.79579006]
2020-08-18 09:19:50,152 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:52,093 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.1459745  -0.78239402 -1.69820524 -1.33208538  0.32647194  0.30799761
 -1.03372897  0.35785991  1.86003976 -1.76529612 -0.63256525 -0.42103129]
2020-08-18 09:19:52,104 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:54,050 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.63321006  0.22460295 -1.26784239 -0.20736705  0.12325316 -0.58885741
 -0.854963   -0.07333056  0.0239749   0.72220473 -0.8505146  -1.6787577 ]
2020-08-18 09:19:54,061 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:56,003 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.49079186  0.68075817 -1.19181654 -1.350077   -0.1274841   0.45238883
 -0.38964505 -1.27887603  0.88190564 -1.73056108  0.86164547 -1.74998852]
2020-08-18 09:19:56,015 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:19:57,971 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.11552313  0.5702327  -0.55124676 -2.98243399 -0.52172104  0.10382258
 -1.68331142 -1.28761839  0.49980728 -1.90999086 -1.25752071 -0.47272922]
2020-08-18 09:19:57,983 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:20:00,041 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.05379109  0.33873084 -2.23880735 -2.8447551  -0.57734784 -0.39158862
 -0.7430343   0.30900278 -0.07992441 -1.47712199 -2.12650916 -0.8764252 ]
2020-08-18 09:20:48,581 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:20:48,767 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:21:27,376 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:21:27,561 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:22:32,154 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:22:32,340 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:23:24,512 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:23:24,807 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:24:08,790 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:24:09,020 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:25:00,544 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:25:00,892 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:25:10,072 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:12,077 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.8270999   1.31757891 -1.61333409 -2.16072658 -0.58015176  0.45228774
  0.20741544  1.25075266 -0.62174409 -2.2487453  -1.97422523  0.09211983]
2020-08-18 09:25:12,088 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:14,610 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.25619561 -0.87814324 -1.23602843 -0.44321587 -2.73512195 -3.29723408
 -0.27385311 -2.06533902 -4.43055536  0.8266538  -2.09850503 -2.57107641]
2020-08-18 09:25:14,627 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:16,672 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.32597724 -0.13101664 -0.95907292 -2.87232695 -1.72823198 -0.08382475
 -4.22636799 -2.45313918 -2.30656946 -3.53725364 -0.85088176 -2.89637805]
2020-08-18 09:25:16,683 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:18,830 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.30506455 -2.78612813 -0.93586063  0.51958797 -0.75473837 -0.58334171
 -3.56121188 -2.89454999 -3.67073679 -1.48738463 -2.24623615 -2.8175294 ]
2020-08-18 09:25:18,841 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:20,862 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.09100138 -1.00546937 -5.57543815 -3.99460002  0.20310635 -3.19507485
 -1.29810366 -3.43585098 -1.67730145 -4.95425909 -0.39124397 -6.18226076]
2020-08-18 09:25:20,872 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:22,889 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.29819634 -1.05921434 -3.44716396 -3.83130198 -1.33696025  0.68182492
 -0.56082507  0.86714925  0.55173483 -2.83229327 -0.54083891 -1.1113734 ]
2020-08-18 09:25:22,900 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:24,967 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.98723211 -1.13595698 -5.22105498 -1.05879899 -3.02567727 -1.37019175
 -2.3571605   0.8445257  -3.77137101 -0.18441397 -1.48088138 -1.8528859 ]
2020-08-18 09:25:24,978 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:26,974 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.50629065 -1.05026316 -3.11369911 -3.77745783 -1.28667225  0.14143767
 -3.81211008 -3.87544408  0.6157721  -4.46259618  0.56332976 -5.03915233]
2020-08-18 09:25:26,985 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:28,976 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-6.624601    0.52441119 -0.5562817  -3.27987665  0.17660197  0.57147018
 -2.55968967 -0.0816093   0.43537493 -3.85585209 -0.95633814 -2.08244925]
2020-08-18 09:25:28,987 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:25:31,064 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.68812029  0.04092725 -2.18022312 -0.67819298 -2.16788436 -0.57143738
 -1.72169122 -1.67616883 -3.25192762  0.06432719 -1.12271776 -3.13482805]
2020-08-18 09:26:42,453 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:26:42,698 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:26:49,365 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:26:51,379 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.00070617 -0.21412174 -3.78278456 -2.56876695 -0.82158364 -2.10808773
  0.97577252 -1.39445651  1.35455284  5.15057165 -0.69454976 -7.83393014]
2020-08-18 09:26:51,390 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:26:53,855 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.4928690195083618, best pos: [-0.42103384 -0.43925122  1.07005398  0.17407372 -0.93391083  0.73362738
  0.29003229 -1.80067191  0.35634386  0.28606365 -0.14406781 -3.19118026]
2020-08-18 09:26:53,871 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:26:56,259 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -3.20747659   3.28590932 -11.56666897  -2.67860864  -3.66901263
  -6.60669241  -4.09012296  -0.95712308  -7.84331197   0.71825468
  -1.99202359  -5.55333756]
2020-08-18 09:26:56,270 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:26:58,400 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -5.65889979  -2.60712745   0.16330936  -0.6558171   -9.19672921
  -0.05613026   1.85044667  -1.98036322  -2.87274691   2.41780029
  -0.19208609 -10.25998853]
2020-08-18 09:26:58,411 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:00,445 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -6.07860376   2.04024341 -13.22096886  -8.34411883  -1.49951544
  -2.54436315  -0.27858851  -5.04469795  -2.42542891  -4.48988271
  -0.43344102  -7.25792961]
2020-08-18 09:27:00,457 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:02,459 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.90526329 -0.39195711 -3.48140942 -1.0654209   1.33976408 -1.15825717
 -2.11115269 -3.40127646 -0.50784641  2.4079426  -1.14043358 -6.59366411]
2020-08-18 09:27:02,470 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:04,480 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.37574373 -0.58583025 -4.77869052 -0.43225372 -8.07979713  1.21071036
 -0.78437491  1.66759223 -0.17841694  1.35191244 -0.7113149  -1.78802505]
2020-08-18 09:27:04,491 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:06,505 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.69503074  0.75329284 -0.42373121 -6.92679517 -0.3305333   3.38922755
 -2.10738097 -2.48374975  5.17249339 -0.67491999 -2.3981036  -4.74147519]
2020-08-18 09:27:06,516 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:08,518 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.11988496  1.87184345 -0.31373645 -0.5964822  -1.87638707 -0.5447266
  0.52482132 -2.23059281 -1.1025816   1.46905697  0.04232871 -2.51526481]
2020-08-18 09:27:08,529 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:27:10,598 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.57944496  3.82736748  0.02801244 -2.21591921 -1.43699266 -0.43395655
  0.38720819 -3.30121681 -1.09526439  0.76596275 -3.42370425 -1.93631923]
2020-08-18 09:28:03,237 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:28:03,472 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:28:13,655 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:15,646 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.91918391 -0.14262359 -2.16880083 -0.4366213  -0.3528258  -0.34120836
 -1.61249812 -0.87762169 -0.74097389  0.17185343 -1.03310253 -3.09352579]
2020-08-18 09:28:15,656 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:17,751 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.12777183 -1.60294581 -0.53033845 -0.2817409  -1.58358174 -0.62233185
 -1.28287472 -0.86084609 -1.86415225  0.3046875  -0.3725839  -2.27287479]
2020-08-18 09:28:17,762 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:20,165 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.88314586  0.38527549 -1.19735961 -1.79288325 -0.88919358 -1.86849916
 -2.15396312 -1.06013572 -3.1249629  -0.56225505 -0.97619342 -2.60956436]
2020-08-18 09:28:20,176 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:22,703 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.37293686  0.05790578 -0.26758315  0.16617379 -1.00397018 -0.34819643
 -0.79318434 -0.77146887 -1.11725391  0.0278798  -1.50183302 -1.9512066 ]
2020-08-18 09:28:22,718 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:25,072 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.19740814 -0.52784001 -4.65950138 -2.73481759 -1.12702554  0.13617184
 -1.80783927 -0.89714524 -2.73507933 -2.15213774  0.05777547 -5.25461937]
2020-08-18 09:28:25,085 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:27,156 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.99451118 -0.45850256 -2.06439052 -1.51982413 -0.41691986 -0.11537056
 -2.33869999 -0.41470851 -0.73350696 -0.35799403 -1.49959572 -3.41971791]
2020-08-18 09:28:27,167 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:29,188 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.87452116  0.35394957 -4.68043724 -3.87350924 -3.85135977 -0.15463327
 -1.82540345  1.1109095  -0.24064822  0.52024802 -2.41472895 -2.87462649]
2020-08-18 09:28:29,199 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:31,228 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.36913748 -0.90097872 -1.13223108 -3.61669826 -0.33529005 -0.46705001
 -3.7180372  -2.43862109 -0.57172506 -4.66437844 -3.3919978  -4.40404639]
2020-08-18 09:28:31,239 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:33,277 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.37594813 -1.85714399 -2.83908809 -1.59531719 -1.84085271 -0.5582863
 -0.9718779   0.28760237 -2.95030689 -0.35979681 -1.7173686  -1.69078997]
2020-08-18 09:28:33,287 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:28:35,384 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.68308793  0.04205324 -2.1734462  -3.54790172 -2.33605522 -0.08377246
 -3.20889669 -0.38786894 -4.98103184 -0.92310897 -0.62456871 -2.80121983]
2020-08-18 09:29:55,977 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:29:56,349 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:30:03,105 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:05,114 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.47194062 -0.24928247 -2.62992559 -1.59465258 -0.2388364   0.20702458
 -1.60160176 -0.54087143  0.01544557 -2.04024314 -2.64992373 -1.64490893]
2020-08-18 09:30:05,126 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:08,221 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.63992534  0.00403043  0.58330412  0.90379758  0.05790071 -0.99669827
  0.10214174 -1.36785541 -2.33573985  1.19668293 -1.51484528 -1.21579297]
2020-08-18 09:30:08,231 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:10,710 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.14010416 -0.04669278 -0.68595587 -1.76650929 -0.22202031 -3.19432417
 -1.45521761 -5.4494565  -5.53108741 -1.48805881 -3.64077139 -6.24143409]
2020-08-18 09:30:10,723 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:13,068 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.96267692  0.00636793 -1.23107634  0.35206686 -2.57080483  1.87349359
  0.2380144  -1.14655831  0.14249791 -0.60922806 -3.39719742 -0.96164338]
2020-08-18 09:30:13,080 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:15,179 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.00542877 -0.08759125 -2.9730574  -2.26212637 -1.29702788  1.29836389
  1.1556634  -3.23791316 -0.52982374 -2.79277272 -0.59989653 -4.98248334]
2020-08-18 09:30:15,190 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:17,152 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.01836568 -0.33451016 -1.67749897 -1.15858905  0.45342839  0.75537421
 -0.88002959 -1.46078756  0.63763688 -0.91039799 -1.05773299 -2.6129249 ]
2020-08-18 09:30:17,162 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:19,151 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.27838559 -0.80463909 -5.75227612 -2.72637491 -3.88983693  0.5087102
 -1.61007683  0.50180898 -0.41875534  0.29791912 -3.38895122 -4.05367688]
2020-08-18 09:30:19,161 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:21,794 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.62447824  1.32588705 -1.18520306 -2.65856402 -1.19125197  1.35155181
 -2.31810425 -2.99170643  0.96429391 -3.92632549 -1.33346825 -3.80860684]
2020-08-18 09:30:21,809 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:24,114 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.67327026  0.0441118  -1.84393235 -2.24183202 -1.31575142  0.78045369
 -0.72150587 -1.05988648 -0.85672585  0.01696235 -0.95054069 -3.80851047]
2020-08-18 09:30:24,126 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:30:26,184 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.67224128  1.49927967 -0.31858323 -1.29486701 -1.34769493  1.08040275
  0.36233659  0.41609025  0.65697691 -0.844995   -2.01063429 -0.39720018]
2020-08-18 09:31:54,405 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:31:54,680 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:31:59,633 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:01,704 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.62552867 -0.21378014 -5.31632124 -1.95607588 -0.65507812 -0.62564561
 -2.72073826  0.41513479  0.3105404  -3.73446164 -2.24706058 -5.8581173 ]
2020-08-18 09:32:01,715 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:03,774 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.10997595 -0.4409948  -0.89592198 -1.66738176 -0.10328541  0.20173601
  0.11083255 -1.25813459 -4.01832736  1.11897978 -0.37765279 -2.28601008]
2020-08-18 09:32:03,785 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:05,794 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.18777323  0.57837029 -1.91538487 -1.43101624 -0.58029051 -1.45975469
 -1.68675517 -0.83122056 -2.5108202  -0.53135994 -0.29875177 -2.1596863 ]
2020-08-18 09:32:05,805 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:07,892 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.436426   -0.0246028  -0.10761404 -1.1412441  -0.51388935  1.31607302
  1.16317307  0.20961225 -0.32189103  0.7555723  -2.27078187 -2.00346679]
2020-08-18 09:32:07,903 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:09,908 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.6923897   0.3507859  -3.77721175 -2.56923418 -1.55592574  0.29195657
 -0.63554079 -2.11790851 -2.42981201 -1.47172197 -0.51249285 -5.10857432]
2020-08-18 09:32:09,918 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:11,893 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.91472364 -0.96365083 -1.49313179  0.46590719 -0.1805946   0.67358067
 -4.23237973  0.33061284 -0.07912626 -1.14794024 -0.24634409 -4.02525245]
2020-08-18 09:32:11,904 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:13,894 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.92741679  0.0689666  -2.33934299 -0.98387259 -0.749128   -0.9866773
  0.13518577  1.3393226  -0.12660072  0.99563182 -0.69274961 -2.21411932]
2020-08-18 09:32:13,905 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:15,905 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.52779732  1.77562912 -6.1590574  -3.18482878 -3.97915649  3.42757114
 -1.88447923 -0.33317136  3.01742457 -3.87387079 -1.44923214 -3.7784007 ]
2020-08-18 09:32:15,916 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:18,011 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.4649703   0.65400731 -0.95938371 -0.69309088 -1.63531952  0.72418476
  0.36106131 -0.17073857 -1.50494376  0.96326329 -0.69800576 -2.23051824]
2020-08-18 09:32:18,023 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:32:20,109 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.9225698   1.68762268 -1.26201085 -2.21498113 -1.5259624   1.72318765
  0.51317104  0.67353446  1.80234712 -1.78997434 -3.15070971 -0.29587005]
2020-08-18 09:33:47,212 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:33:47,956 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:33:59,560 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:01,544 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.69600083  0.54680593 -0.86428174 -0.05882813  0.13310934  0.49201716
 -0.70637179 -0.91161034 -0.72251013 -0.13561009 -1.09795664 -1.86151683]
2020-08-18 09:34:01,554 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:03,761 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.71600711 -0.013133    0.20406452  0.29848095 -0.67015093 -0.6928665
  0.58503471 -1.32415189 -1.30231683  0.84933007 -1.22789261 -1.16758976]
2020-08-18 09:34:03,771 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:05,776 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.84386803 -0.03966198 -0.18029434 -0.52104515 -0.00767479  1.00403916
 -0.39913297 -1.4971094  -1.39481619 -0.42425884 -1.3570384  -1.91823795]
2020-08-18 09:34:05,787 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:07,773 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.39648109  0.50537383 -0.7650047   0.4696389  -1.83293544  1.35540029
 -1.62954529 -0.83960063 -0.38350404  0.36550764 -1.79050844 -0.16868932]
2020-08-18 09:34:07,784 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:10,088 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.89895527  1.09653548 -4.1198226  -0.52797339 -1.5333362   0.99087165
 -1.61932529 -0.00939602 -2.73122874 -1.31422134 -0.11946437 -5.16317816]
2020-08-18 09:34:10,099 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:12,260 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.65112527 -0.1334926  -3.34683741 -0.80078748  1.22507928  2.39354941
 -2.03684253  0.06249401  1.95699333 -3.50282607 -1.07853439 -2.47824372]
2020-08-18 09:34:12,270 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:14,269 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.86714068  0.12647031 -1.13887509 -1.53547832  0.40629246 -0.1698322
  0.21401543  0.49792886 -0.86774072  2.07074472 -2.0418935  -1.9684923 ]
2020-08-18 09:34:14,280 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:16,272 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.24660542  2.23189759 -2.41341609 -2.68431174 -2.49160335  1.26988443
 -1.2002054  -1.90064814  2.02984403 -6.14492213  1.07164119 -4.26864634]
2020-08-18 09:34:16,283 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:18,274 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.58662065  1.08488538 -0.99165807 -1.2180189  -0.48234853 -0.04229331
 -2.64160407  0.55475556 -1.05368354  0.43330489 -0.51338501 -2.71139999]
2020-08-18 09:34:18,285 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:34:20,386 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.06932648  1.34457086  0.06574597 -2.80798536 -0.21057843  0.32366323
  0.05165934  1.29583917 -0.26493458  1.92818477 -1.39902157 -1.43780105]
2020-08-18 09:39:17,397 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:39:17,640 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:39:24,627 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:26,656 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.03836947 -0.71381844 -2.84559577 -0.92778286 -0.94726959  0.20132042
 -3.31226322 -1.0753451   0.24733763 -1.37728121 -1.89702104 -1.75239689]
2020-08-18 09:39:26,672 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:28,670 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.41183531284332275, best pos: [ 0.04042535 -0.06153653  0.79583852  0.89275249 -1.72166437 -0.25834094
 -0.68727308 -0.26844901 -0.68131479  1.031124    0.09790487 -1.22386178]
2020-08-18 09:39:28,681 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:30,665 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.77971388 -0.58022769 -5.61891676 -3.34692822 -3.18539138 -4.14893594
 -2.04141603 -0.9350009  -2.81350049 -0.85987161 -0.74109546 -1.64813444]
2020-08-18 09:39:30,675 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:33,061 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.00548197 -0.61849984 -0.50531507 -0.33135664  0.05092628 -0.73887442
 -0.78762502 -0.9374253  -1.26415746 -0.27324461 -0.1949897  -1.18187691]
2020-08-18 09:39:33,073 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:35,508 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.75282938 -1.1060003  -1.62209856 -0.72912117 -0.78976051 -0.38845319
 -0.87094768 -0.56916975 -1.7820298  -0.01295548  0.41590193 -1.38008059]
2020-08-18 09:39:35,522 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:37,494 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.1470613  -1.1672494  -0.98224619 -1.47555547 -0.51714888  0.65569189
 -2.88665404  0.67287472  0.1732267  -0.92133332 -0.55607403 -2.8158192 ]
2020-08-18 09:39:37,504 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:39,485 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.66809102 -1.39283711  0.23784656 -1.69527424  1.48086854 -0.53538095
 -0.64873436 -0.51794388 -4.68126947  0.95070649 -1.19720685 -1.68858782]
2020-08-18 09:39:39,496 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:41,716 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.76328334 -0.24825565 -2.40538574 -2.6198321  -0.99879232 -0.7044632
 -4.93696887 -2.94480133  0.9732832  -5.21177303 -0.44701061 -4.06642249]
2020-08-18 09:39:41,730 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:43,835 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.7863108  -0.24488345 -2.58341575 -2.05744698  0.04102216 -0.90586551
 -1.26615136 -0.89962153 -0.37685544 -0.67210504 -0.35892144 -2.31314529]
2020-08-18 09:39:43,846 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:39:45,821 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.8025549   0.4425451  -1.90772808 -0.57284809 -1.32724179 -1.08486111
 -1.50183178 -1.75726512 -2.15080012 -0.03584684  0.43311707 -1.27854147]
2020-08-18 09:40:53,093 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:40:53,363 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:41:05,346 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:07,626 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.17405724 -1.65423863 -2.03800179 -0.24244051  0.68170753 -0.20676973
 -4.17599653 -0.52892699  0.45440276 -0.59016242 -1.97013476 -4.86607158]
2020-08-18 09:41:07,638 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:09,699 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.53387211 -1.28885364 -2.8853395  -0.38430097  1.00847972 -0.17125195
  1.04361462 -3.4503101  -5.97926572  1.40810915 -0.63670728 -1.80693923]
2020-08-18 09:41:09,709 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:11,707 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.82636357  1.26167589 -4.71206343 -2.62019156 -2.92753453 -0.72225101
 -2.01471567 -1.1830679  -1.94147036 -2.11280275  0.07597108 -4.40106296]
2020-08-18 09:41:11,718 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:13,720 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-6.89563687 -0.33930083 -2.66768937  1.47737338 -1.4855486   1.39317508
 -4.30421195 -1.23384299 -2.68253548 -4.09262605 -3.66746419 -3.09523357]
2020-08-18 09:41:13,731 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:15,809 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.48248839  0.79461946 -5.74993918 -3.5828992  -2.09557518  0.3067332
 -1.05985214 -1.70189108 -3.60463886 -2.25457476 -1.21328497 -6.54417543]
2020-08-18 09:41:15,819 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:17,779 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.29524612 -0.4225778  -2.15140839 -2.16577527  0.08303071 -0.88320386
 -5.96635735 -0.69156806 -2.54051617  1.30130984 -1.21371634 -5.79130337]
2020-08-18 09:41:17,790 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:19,749 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.60600182 -1.11683068 -5.39035292 -2.43575515 -1.7128905   0.17240269
 -2.11159953  1.00031665  0.01226737 -0.46774135 -1.85417663 -3.23446257]
2020-08-18 09:41:19,759 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:21,725 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.43110844  0.07342515 -3.98926392 -4.48122143 -2.64672855  1.84809128
 -3.77763256 -0.44272342  0.64077567 -4.38784267 -2.34619739 -3.76126101]
2020-08-18 09:41:21,736 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:23,715 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.93670876  0.26045261 -3.0945399  -4.45795815 -0.1833057   0.13852944
 -1.4057516   0.42514699 -1.11772356 -0.98280664 -1.16647818 -2.69565647]
2020-08-18 09:41:23,726 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:41:25,696 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.79218811  1.25420044 -1.75372252 -2.87988474 -0.55472888  1.65973584
 -0.81254281  1.5171651   1.59636705 -2.48601518 -3.05957925 -0.18002077]
2020-08-18 09:42:28,429 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:42:28,660 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:42:36,403 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:38,727 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.78707496  1.50093402 -0.74823813  0.88043741 -1.24791381  3.64223018
 -0.07093413  0.64354208  0.11381161  0.12872908 -1.31117786 -1.89863613]
2020-08-18 09:42:38,753 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:41,669 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.18051552772521973, best pos: [ 0.87337821 -1.58198092 -1.44616374 -0.18574613 -0.0824866  -0.33402703
  3.14883923 -2.91295848 -6.60213754  2.0714898  -1.21193604 -4.31106182]
2020-08-18 09:42:41,694 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:44,861 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.42602976  0.56380458 -1.6887374  -0.62769841 -0.95099565  3.91320822
 -1.21061493  0.59862895 -0.77382762 -1.05794091 -0.87534307 -2.22170666]
2020-08-18 09:42:44,876 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:49,035 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-11.769304     0.84938934  -4.09828762  -1.30788415  -5.25372993
   3.69519336  -0.12482058  -0.51712398  -2.17855136   0.02630501
  -4.66608757  -3.56333529]
2020-08-18 09:42:49,053 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:51,916 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-7.70396903  0.8628188  -6.26029124 -2.31201861 -5.3936166   2.88928036
 -1.33589005  0.39469009 -5.32841327  0.57047898 -2.3301422  -5.70567774]
2020-08-18 09:42:51,927 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:54,109 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.76752676 -0.74978349 -2.87129844 -0.27044077 -0.27414696  4.9527896
 -2.2107297   2.70547266  0.96374061 -2.32319319 -1.46182077 -1.26703668]
2020-08-18 09:42:54,120 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:56,333 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-6.15365447 -1.20508473 -0.6958735   1.59777861 -4.16082107 -0.19873206
 -1.18141605 -0.64059641 -4.13504373  3.16473726 -3.37252417 -4.07912336]
2020-08-18 09:42:56,349 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:42:58,436 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.26885434  0.80371063 -4.03359148 -0.4684939  -3.2760268   5.16515297
 -1.25276003  0.48644516 -0.65797611 -1.1907572  -1.17506886 -2.62489021]
2020-08-18 09:42:58,447 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:43:00,477 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-7.69346906  0.63942601 -1.81707982 -0.67894484 -1.69301699 -1.38241145
 -2.36126649 -1.66481886 -5.14259745  4.04248035 -2.28341619 -8.72691607]
2020-08-18 09:43:00,487 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:43:02,881 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.02562723308801651, best pos: [-6.34202695  0.16848115 -0.10169093  0.06500797 -3.6531853   0.61817988
 -0.81390349 -3.01401197 -2.94827869  2.9639609  -3.73486696 -3.43247346]
2020-08-18 09:43:57,296 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:43:57,612 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:44:04,776 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:07,031 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.44664741  0.30784201 -0.98752233 -1.46371585 -0.82688425  6.56215089
  0.06694101  0.02196433  1.46540883 -2.2995154  -2.54213819 -0.92296657]
2020-08-18 09:44:07,044 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:09,932 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.19976563  0.25962447 -0.93105    -2.13357201 -0.8150537  -3.123853
  0.56175416 -1.36778236 -5.98270363  2.42903297 -1.74253746 -2.64737346]
2020-08-18 09:44:09,943 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:12,006 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.04138683  0.5132666   0.08337254 -0.46523502 -0.86578943  0.15305817
 -2.67663895 -1.04683959 -2.52700509  0.05943907 -1.33321737 -3.64206252]
2020-08-18 09:44:12,017 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:14,055 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.85718884  0.3590733   0.17371804  2.037662   -1.23028352  1.47731146
 -4.05333993 -1.43689061 -2.66218463 -0.1908224  -2.4216692  -5.17516632]
2020-08-18 09:44:14,066 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:16,081 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.2163056   2.77537581 -3.90098268  1.12114717 -0.396481    2.69831282
 -3.93716086  4.09282737 -2.26404776 -2.17886716  0.398553   -5.19530817]
2020-08-18 09:44:16,094 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:18,079 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.49170300364494324, best pos: [ 4.87868083 -0.32797127 -3.87421107 -5.25053982  1.45062137  0.55876077
  0.17629394  0.80450023  2.86861088 -5.17525617 -0.27013923 -3.73175072]
2020-08-18 09:44:18,089 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:20,074 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.38394269  1.3884851  -2.7492103  -2.22340432  0.47795565  0.87444254
 -1.33528205  1.22317076  0.7779391   0.5592732  -2.33530451 -3.87181955]
2020-08-18 09:44:20,084 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:22,019 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.79527657  1.33880248 -2.72485364 -2.78434911 -0.03709987  4.72482924
 -0.02689257  2.01581047  0.49302741 -4.53410655 -2.71682103 -0.10102103]
2020-08-18 09:44:22,030 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:23,936 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.00162363  2.60471997 -5.12363438 -2.76832322 -0.56870483  1.14192322
 -1.09266254 -0.44199361 -0.75049724  0.1108949  -1.60025995 -4.79040058]
2020-08-18 09:44:23,947 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:44:25,942 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.66891242  1.46358038 -3.986976   -3.55270872 -0.33958641  1.07164714
 -3.65174755  2.07849766 -4.32328875 -3.28142519  0.06898526 -2.15990426]
2020-08-18 09:45:29,003 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:45:29,316 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:45:35,991 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:38,025 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.00465112  0.81705524 -2.2675536  -0.56532383 -1.04739127  1.99353131
 -3.24779991 -0.86927238  0.32115254 -3.3320704  -0.97704452 -2.51233636]
2020-08-18 09:45:38,036 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:40,011 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.67709607 -0.92407284 -1.11146139 -1.85935157  0.80172812  0.4331946
 -1.34749543 -3.77773913 -6.76050884  1.56653005 -2.04765293 -3.77032836]
2020-08-18 09:45:40,022 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:42,956 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.85628698  1.17164638 -1.669524   -0.69716812 -0.57795359  0.97840411
 -0.72037732 -0.50037765 -0.15485099 -0.50385821 -0.32540404 -3.57834996]
2020-08-18 09:45:42,977 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:44,987 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.07945589 -0.19518336 -1.18124468  0.79807479 -1.97260255  1.08231531
 -3.18949989 -0.65967765 -0.90687158 -2.25162428 -2.2248753  -1.05888868]
2020-08-18 09:45:44,998 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:47,171 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.03216063 -1.80518961 -4.70922145 -0.9604953   0.03617128 -1.30198932
 -0.50198551 -3.78235302 -2.61220747 -4.50956949  0.35962118 -4.14455551]
2020-08-18 09:45:47,182 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:49,215 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.04477773 -0.29587422 -2.75886101 -1.06208514  0.52945603  1.29700024
 -1.73826845  0.23768616  0.42882936 -3.49334009 -0.0645553  -5.27915888]
2020-08-18 09:45:49,225 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:51,241 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.63957267  0.36903117 -2.82374599 -0.18629465 -0.9808159   0.37003424
 -2.08908972  0.68217007 -0.01127606 -0.17862869 -0.57177805 -1.6692836 ]
2020-08-18 09:45:51,253 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:53,716 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.64280178  0.39276465 -3.67444921 -1.90186713 -1.98381106  0.45638962
 -2.08745551 -2.61712422 -0.23261867 -5.05708134  0.20784298 -3.89677835]
2020-08-18 09:45:53,729 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:56,607 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.21501127  1.17147106 -2.25349316 -2.27325358 -0.18087215  3.09306548
 -0.85059678  0.76934727 -1.85052091 -1.89235732 -0.53088847  0.79872028]
2020-08-18 09:45:56,619 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:45:58,795 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.70781981  2.02191117 -2.73032809 -0.6361693  -1.70507382 -0.27315558
 -2.17968922 -3.20090375 -3.18058187 -1.00897894 -1.81195879 -2.19080533]
2020-08-18 09:45:58,805 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:00,911 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.3997364   0.5975907  -0.31045675 -1.65716365  0.52330597  4.61827556
  0.70941792  0.60655147  0.01477747 -0.96836969 -0.85671625 -0.15409238]
2020-08-18 09:46:00,922 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:02,917 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.39605836  2.29753812  0.29068607 -1.55799094 -1.9451495   1.11914364
 -1.57919588  2.09072403  1.27048964  0.26363835 -2.2481146  -0.75431147]
2020-08-18 09:46:02,928 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:05,151 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.98366871 -0.6068866  -2.85336206 -1.65359687 -0.10185516 -0.59954199
  0.56586927  0.11077623  1.63449896 -2.4644149   0.54737461 -3.66771618]
2020-08-18 09:46:05,163 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:07,165 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.3186921   0.54575172 -2.10878884 -1.45441286 -0.76773789  0.6826501
 -2.2266325  -2.16478162 -2.10136169 -1.28806005  1.14569896 -7.88507224]
2020-08-18 09:46:07,175 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:09,364 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.2446727   1.23923709 -1.61383913 -1.29613032 -1.49765473  0.7589024
 -2.03766615  2.0115138  -1.30355126 -1.88143689 -0.03392043 -1.76222847]
2020-08-18 09:46:09,375 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:11,466 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.92549937 -1.81767154 -2.24035663 -0.94400486 -1.02868459 -1.01434937
 -1.42859929 -4.52070115 -0.42694632 -3.13114702  1.66269236 -7.64100944]
2020-08-18 09:46:11,477 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:13,454 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.23961728 -0.01736413 -1.44179495 -0.69430531 -0.32165527  1.99839081
 -0.50047546  1.30855893  0.34969616 -0.95175746 -0.84734541  0.24027594]
2020-08-18 09:46:13,465 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:15,443 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.38994778  1.51601813 -3.60244213 -2.37443132  0.94687849 -3.81171521
 -2.26646376 -3.42511612 -1.51752248 -1.0258701   0.77059573 -7.61849759]
2020-08-18 09:46:15,453 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:17,426 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.46810171  0.34095674 -1.01434641  0.65896332  0.01152785 -0.64326848
 -0.88392948 -1.06344596 -1.45672192  1.87969119 -0.85629098 -5.34902565]
2020-08-18 09:46:17,437 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:19,407 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.79763392  0.17971353 -2.53811286  0.18794362 -2.30108084  1.07409219
 -2.66951345  0.22468958  0.37965176 -0.75188568 -1.42779995 -0.277839  ]
2020-08-18 09:46:19,417 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:21,485 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.01730369  2.44556461 -0.90982921 -1.29440749 -0.82424875  0.51754341
 -1.50648994  0.16921007 -0.58098695 -1.72130117 -0.43629785 -3.6850541 ]
2020-08-18 09:46:21,496 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:23,443 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.3991843  -0.42092463 -1.05051861 -2.29841836  3.15290589  0.9829417
  0.06801162 -0.38249112  1.47245198 -0.15972953 -0.42952676 -5.37996068]
2020-08-18 09:46:23,453 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:25,403 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.61612349  0.37369808 -1.54427125  1.18839985 -1.11319514  2.82706967
 -0.37980322  0.90357393 -1.34122137 -0.93279574 -1.31754414 -0.55843112]
2020-08-18 09:46:25,414 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:27,384 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.31633943 -1.36097593  0.31443412 -0.00859663  0.11739247  0.63768058
  0.79951209 -2.43498526 -0.75901685 -0.32228171  0.26569228 -6.83394998]
2020-08-18 09:46:27,395 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:29,378 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.83968448 -2.12402934 -1.17463426  0.8059719   0.826356   -0.55667955
 -2.00849639 -4.97963514 -0.22334989 -0.54139486 -0.70860498 -9.05453151]
2020-08-18 09:46:29,389 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:31,367 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.14308248  1.7139454  -2.57633015 -0.4896973  -0.02882352  0.89660389
 -2.06738613  0.59713014 -0.20117095  0.65662122 -0.92213027 -2.65377257]
2020-08-18 09:46:31,378 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:33,449 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.34015664 -0.12119166 -1.18970144  0.31562049  0.61938914  2.44108379
 -1.26077542 -0.55504153  1.08690422 -2.35720026 -3.98968602  0.09615485]
2020-08-18 09:46:33,461 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:35,437 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.07887358 -0.0150937  -2.36632211 -0.47300404 -0.33860377  1.32162275
 -2.44920188  1.19937868 -0.40931971 -4.04261458 -1.51517479 -1.0226615 ]
2020-08-18 09:46:35,448 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:37,428 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.11400118 -2.26870222 -5.01754985 -0.59816253 -0.42984873 -0.49646051
 -5.31142874 -0.18816651 -1.76029394 -2.9204331  -0.69570945 -5.54294838]
2020-08-18 09:46:37,438 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:39,410 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.36388629 -0.24786558 -0.32982802 -0.61125894  0.92679821  0.68967044
 -0.38891445 -1.5286701  -1.14485109 -1.85645107  0.26819214 -7.59023452]
2020-08-18 09:46:39,421 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:41,398 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.6905094  -1.6283809  -1.77941393 -2.77411314  1.30047025  1.60603159
  1.03468505 -1.94449189  1.28052549 -4.31763862  0.31413248 -1.12265951]
2020-08-18 09:46:41,410 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:43,480 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.64385955  0.34602997 -0.3522443  -0.33209752 -1.55036369  3.37439353
 -2.46330847 -1.2898866  -0.9286338  -3.19637429 -1.25732135 -3.50815351]
2020-08-18 09:46:43,491 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:45,455 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.41765876 -1.31193513 -4.59489321 -2.27975218 -0.27547417  1.39110288
 -0.87427311  0.67725991 -0.88064518 -4.8587338   0.37114209 -1.79417475]
2020-08-18 09:46:45,467 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:47,432 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.89754467 -0.12726242 -3.3205568  -1.05488708 -4.13972606  1.74993681
 -2.80734121  0.46455188  0.04777877 -5.4686414  -0.96687364 -0.53473858]
2020-08-18 09:46:47,444 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:49,416 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.28124898 -2.5978678  -1.84394896  1.02389891 -0.76030655  0.44919558
 -1.40680097 -6.3911793  -4.60617578 -2.7025391  -0.62414064 -8.53758462]
2020-08-18 09:46:49,427 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:51,445 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.41006597 -0.94209325 -3.45437552 -3.21649651  0.0647324  -3.22674627
 -1.42578995 -3.93429755 -1.06292579 -6.58265387 -0.64497354 -1.95938768]
2020-08-18 09:46:51,457 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:53,441 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.34547633  0.13360433 -4.0943457   0.0163668  -5.60594411  2.7724544
 -2.87103091 -1.48265935 -0.77296783 -4.18530317 -0.54374946 -2.75130171]
2020-08-18 09:46:53,452 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:55,531 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.23236882  0.66834108 -1.86812172 -3.10800011 -1.12310939  1.00216531
 -0.70259194  0.87496522  1.13409108 -4.40523013 -0.40867198 -1.80477574]
2020-08-18 09:46:55,541 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:57,520 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.00811597  0.35966288 -2.04444031 -1.32274321 -0.13755018 -1.54516122
 -1.93455762 -1.60015706 -0.56900169 -2.49832423  1.04591198 -8.69822099]
2020-08-18 09:46:57,530 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:46:59,503 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.97321007  0.70895886 -1.75157218  0.62791754 -0.5219882   1.36778852
 -1.65808501 -2.46473671 -2.44360249 -0.90355488 -2.53464545 -2.85430504]
2020-08-18 09:46:59,514 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:01,495 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.47802213  0.74481221 -1.25656725 -0.56655284 -0.17647639  2.07342473
 -1.5103195  -1.18438208 -0.77707878 -0.7768528  -1.70825316 -1.01891108]
2020-08-18 09:47:01,505 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:03,489 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.66734222 -3.88539303 -5.49333489 -1.11273285 -1.82363292 -0.73761254
 -7.27603681 -3.28890425 -0.02431024 -3.51918153 -1.25551757 -5.57529995]
2020-08-18 09:47:03,499 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:05,587 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.91890649  1.1724632  -1.25504313 -1.44727472 -0.21800648  1.40279849
 -1.04811883  0.44657884  0.64684627 -0.48314005 -2.55557697  1.74160687]
2020-08-18 09:47:05,599 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:07,585 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.13824107  1.17486628 -0.98339166 -0.45914158 -2.18556654  1.01502349
 -1.98004282  1.555814   -0.89529919  0.34566222 -0.1076282  -2.43566744]
2020-08-18 09:47:07,596 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:09,667 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.49874912  1.08242988 -3.06663813 -2.25319917 -0.60930925 -1.10622765
 -3.60152473  1.04242659 -0.04182738 -4.20611019 -1.37821585 -2.04864247]
2020-08-18 09:47:09,677 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:11,665 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.20635334  0.21588503 -0.70822617  0.45271973 -0.9747662   1.32322671
 -1.77731349  0.23917492 -0.06060191 -0.88162649 -1.34192879 -0.40001927]
2020-08-18 09:47:11,676 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:13,664 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.25604754  0.22305125  0.78678131  0.2890321   0.30515463  0.37646347
 -1.05510574 -1.24831135 -3.03967276  2.03692646 -3.17412011 -1.78547982]
2020-08-18 09:47:13,674 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:15,765 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.16514    -1.2314163  -4.61208662 -3.15471126 -0.10937489 -0.5242561
 -3.38332281 -1.35792146  1.04495852 -4.18673001 -0.97623019 -3.17161863]
2020-08-18 09:47:15,776 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:17,756 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.1899541  -0.6529631  -2.96700436 -0.50432116 -0.02808752 -0.74929751
  1.18573549 -0.63614997 -0.61796748 -0.75529813  0.8366654  -6.21367473]
2020-08-18 09:47:17,767 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:19,748 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.0342022  -0.88708828 -5.47831149 -1.34146232 -2.61235508  0.69428075
 -2.76938872 -1.63665266 -2.92012819 -4.16623966  0.02614884 -3.18040013]
2020-08-18 09:47:19,759 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:21,744 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.61436697 -0.04792335 -2.94482363 -1.37473219  0.35411959  0.99700224
 -2.77621771 -0.40059597 -0.78697027  0.14184965 -1.45496909 -2.44002404]
2020-08-18 09:47:21,755 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:23,885 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.18327279  1.16952904 -3.3445729  -0.05239739 -1.55041563 -0.73314263
 -2.558695   -2.67941552 -2.13716939 -0.66377041 -1.62418207 -2.52093355]
2020-08-18 09:47:23,895 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:25,896 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.89540629  1.32753291 -2.18285903 -0.34550244 -0.34690566  0.93558477
 -1.76456686 -1.88388766 -1.04993563 -3.08256605 -0.60848818 -4.91908416]
2020-08-18 09:47:25,907 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:28,002 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [  0.89395545   0.1543981   -0.70925899  -3.22713037  -0.64557202
  -0.75432261  -3.44066917  -4.74593062  -1.02458341 -10.27625299
  -0.60487124  -3.49735385]
2020-08-18 09:47:28,013 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:30,000 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.05449347  0.69384434 -3.56971274 -4.01008061 -0.21327591 -1.45552409
 -1.33979088  0.161597    0.73332052 -3.83041943  0.03821884 -1.67531325]
2020-08-18 09:47:30,011 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:31,986 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.90181761  1.78016622 -2.14153035  1.57470672 -1.33924363  2.4460564
 -0.79325609  0.78454487 -3.28754076 -1.45648312 -2.03680133 -2.11718775]
2020-08-18 09:47:31,997 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:33,972 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.29138122 -0.28577233 -4.30200357 -2.25852956  0.73544783 -1.08119568
 -1.90338465 -1.48943214  0.08459558 -0.22306731 -0.14108273 -6.62650556]
2020-08-18 09:47:33,984 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:35,971 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.44187011 -0.10889051 -1.68295198  0.26156502 -1.84051335  3.10822476
 -0.77315536 -0.18621647 -1.2361375  -0.14008625 -0.60167742 -5.19904499]
2020-08-18 09:47:35,982 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:38,074 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.72076313 -0.09249822 -1.50982228  1.15634886  1.07619891  2.86383195
 -0.67904307 -0.31671951 -0.56164448 -1.31540937 -2.52803916 -2.80312087]
2020-08-18 09:47:38,085 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:40,058 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.7177321   0.16870868 -1.79557951  1.58521617 -1.47478329  1.49600046
 -2.59976278 -0.66206067 -0.29256628 -1.62773057 -0.79637408 -3.04968612]
2020-08-18 09:47:40,069 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:42,051 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.04028443 -3.21666277 -3.25536215 -1.66832203  0.82334308 -0.02002682
 -5.69633711 -3.58418113 -0.29251001 -1.16683565 -0.23601848 -8.34374775]
2020-08-18 09:47:42,061 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:44,051 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.12768254 -1.81561478 -0.51810007  0.1901305   0.67782233 -0.524952
 -0.54929454 -3.82632623 -2.79100164 -0.75828716 -0.71306459 -5.27340548]
2020-08-18 09:47:44,062 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:46,051 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.73034062 -0.4649219  -2.52249729 -2.03546042 -0.24164825  0.38109819
 -0.40167981 -0.61753778  0.74673747 -2.64724105  0.35765369 -2.12724656]
2020-08-18 09:47:46,062 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:48,055 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.96379443  0.80647143 -1.36837314  0.12022664 -0.58093338  0.15224631
 -1.63579546 -0.31176609 -1.44621024 -0.60496289 -0.91313681 -3.01489823]
2020-08-18 09:47:48,066 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:50,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.36770768  0.66553201 -6.76496006 -0.39100053 -0.968584   -2.15056915
 -5.74825807 -3.42132374 -1.949775   -8.29063952 -4.5194889  -2.42083771]
2020-08-18 09:47:50,178 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:52,160 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.33241517 -1.81884535 -4.56475097 -1.50198112 -1.11519007 -2.07692925
 -7.34719496 -1.95347265 -0.4321709  -5.007429    0.15126986 -6.77746045]
2020-08-18 09:47:52,171 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:54,150 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.46592221 -0.92922468 -3.57462278 -1.14887625 -0.91674604 -0.58818205
 -2.47780237 -0.86988467 -0.04987421 -4.17397478 -0.15521123 -3.1851403 ]
2020-08-18 09:47:54,161 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:56,142 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.46706352  1.954168   -0.0715761  -3.70483151  0.86633376  1.47491038
 -1.88888424  2.68032141  2.13436282  0.95543002 -3.00765122  0.08545505]
2020-08-18 09:47:56,153 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:47:58,140 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.72820516 -1.04803525 -2.24111774 -1.03371884 -0.01711081 -0.03140661
 -2.10887565 -2.2232258  -2.04561192 -0.11042408 -0.50182754 -7.55654204]
2020-08-18 09:47:58,151 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:00,229 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.33802797 -1.46356735 -3.98891374 -2.28441974  0.80648775 -0.17565841
 -2.86474612 -2.04756489 -3.89194416 -0.3103984  -0.52368549 -8.27032086]
2020-08-18 09:48:00,240 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:02,206 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.7666944  -2.71120467 -5.72784982  2.92493272 -5.91281629  1.87997742
 -3.33791568 -4.8198848  -8.66319482 -2.0078633  -0.98169539 -3.8160319 ]
2020-08-18 09:48:02,216 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:04,192 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.93411119 -0.86352453 -4.2281883  -0.92852449  0.74717344 -1.37892896
 -0.27804886 -1.12962634  0.25282722 -2.38405107 -0.50499577 -2.17017267]
2020-08-18 09:48:04,203 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:06,183 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.41251602  1.60942321 -0.29779797 -0.6708392  -1.19684345  6.82921236
 -0.03780817 -0.18611102  1.75335537 -1.43892773 -0.71754745 -0.86182555]
2020-08-18 09:48:06,194 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:08,174 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.96020878 -2.00166748 -5.15171673 -2.24087308 -1.78450184 -2.19205969
 -1.99734214 -2.51141504 -2.65236262 -6.81230053  1.16549165 -2.09344769]
2020-08-18 09:48:08,186 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:10,167 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.50915341 -0.33594648 -7.49079576 -1.15393738 -2.72264417  0.93562941
 -3.29858342 -2.22760832 -5.79200806 -2.96940751  0.39041971 -4.13811819]
2020-08-18 09:48:10,178 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:12,250 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.50607693 -1.66827879 -5.37741804 -0.57022379 -1.23527421 -0.93124113
 -1.19649545 -2.61816514 -2.088291   -2.95214907  0.5863521  -4.33959896]
2020-08-18 09:48:12,261 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:14,240 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.60002283 -3.15715221 -4.18069932 -3.125742    1.56588585 -1.74671484
 -0.20635379 -3.085068   -0.91588988 -5.10621837 -0.21334803 -0.74903574]
2020-08-18 09:48:14,251 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:16,231 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.01563489 -0.98012336 -4.67214003 -0.64510672  0.91929542 -1.81871082
  0.66770123 -4.14841166 -5.12852788 -0.37260032  0.08801803 -3.94872416]
2020-08-18 09:48:16,242 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:18,231 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.01984389  0.14299185 -1.16456047  0.69113413 -0.53755165  1.99927473
 -1.53369253  0.80740398 -1.1122989  -0.69011299 -1.37506631 -2.28880339]
2020-08-18 09:48:18,241 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:20,218 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.28168014 -1.51185972 -4.26534087 -1.39889319 -0.10389828  0.20315113
 -1.03274554 -1.2767426  -2.81670835 -0.42344223  0.75648223 -7.26778085]
2020-08-18 09:48:20,230 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:22,317 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.0048973  -0.23921232 -3.65264258 -2.51811995 -0.12148969  0.72926407
 -0.03366928 -0.79738245 -1.00539683 -4.11596698  0.16901393 -1.3203415 ]
2020-08-18 09:48:22,327 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:24,308 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.589912    0.44037824 -1.33281932 -2.16774949  1.54689078  4.39680375
 -1.29170974 -1.03517604 -1.0123042  -0.18779091 -1.46334868 -4.3135171 ]
2020-08-18 09:48:24,318 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:26,304 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 2.52543634 -2.66808375 -3.25699974 -2.45642861  1.61915096  1.51688269
 -0.17870636 -3.21946146 -0.16901051 -5.84372259 -0.93293061  0.19541753]
2020-08-18 09:48:26,315 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:28,299 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.46267892  0.76213727 -3.63563458 -0.77931779  0.67527693  1.82006266
 -4.57301482 -3.57434892 -3.69234292 -3.04781091 -3.59155371 -1.85638728]
2020-08-18 09:48:28,310 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:30,298 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.69170502 -1.85633554 -2.03235779 -1.29982438  1.32187931 -0.19217902
  0.40369589 -0.70222554  1.69505992 -2.94185382  0.15173362 -3.46210444]
2020-08-18 09:48:30,309 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:32,297 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.58839135 -1.12253644 -5.54504531 -8.16342512  2.94481484 -4.42344712
 -0.01163596  0.81550235  1.87526136 -2.07188004  0.3901389  -2.38401198]
2020-08-18 09:48:32,308 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:34,389 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.02186374 -1.89153211 -6.8993323  -1.81213485 -0.24256264 -1.9590806
 -2.89693204 -2.74215397 -4.46373512 -3.76328948 -0.10958849 -4.30593203]
2020-08-18 09:48:34,400 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:36,387 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.17117234  1.03484535 -3.75046294 -0.50580269 -0.01128169  1.97933992
 -3.27591172 -0.69129375  1.85249269 -5.72208343 -3.02982077 -1.00669944]
2020-08-18 09:48:36,398 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:38,418 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.68274376 -2.02739617 -3.25292522 -1.64574824 -2.93500861 -0.79485591
 -5.47306611  0.0854881  -0.88554779 -0.5823632   0.75235222 -9.10550051]
2020-08-18 09:48:38,429 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:40,427 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.86526743  1.19331493  0.47468932 -0.82246139 -1.29635555  1.5352883
 -2.36836569  0.0897328  -0.12359971 -0.33693553 -1.81893768 -3.08936618]
2020-08-18 09:48:40,437 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:42,427 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.49180085  0.28425079 -4.21005327 -1.3376256  -0.19560079  4.22262022
  0.30457181  1.01194301 -0.97797085 -2.58857547  1.13667343 -1.963208  ]
2020-08-18 09:48:42,437 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:44,526 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.39847145  0.13381701 -2.15023955 -0.806584   -1.57080877  1.46335987
 -1.74326223  1.50955077 -2.42199104 -0.48904887 -0.63553199 -2.12428348]
2020-08-18 09:48:44,537 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:46,519 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.85984304  0.68546778 -0.85900468 -0.25555238 -1.18473486  1.9422693
 -2.15748271  0.07212324 -0.05903357 -1.34858398 -0.84145605 -0.74469436]
2020-08-18 09:48:46,529 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:48,520 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.59167837 -0.36469163 -0.17711199 -0.43497084 -0.24640982 -0.51558659
  0.32537397 -4.74559638 -2.53975671 -1.06412898  0.89839956 -4.86787297]
2020-08-18 09:48:48,531 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:50,543 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-6.25043177 -0.75061561 -2.61000222  0.50744782  0.3092994   0.8380509
 -2.65982174  1.16139246 -4.2071201   0.27952742 -2.5558298  -6.27370693]
2020-08-18 09:48:50,554 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:52,537 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.86775357  0.66960968 -1.5723551  -0.17930438  0.51758179  3.10232141
 -3.02151751 -0.5142839  -2.28502987  1.37185855 -7.24569666 -0.74485752]
2020-08-18 09:48:52,548 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:54,537 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.77596547 -1.08120911 -4.32930771 -0.66585182 -0.53835916 -0.61491225
 -1.52898261 -1.95293024 -1.9518869  -2.23776923  1.13201704 -6.36407757]
2020-08-18 09:48:54,548 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:56,677 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 1.1267249  -1.03622036 -1.45762709 -1.40370821 -0.33798336  0.48618385
 -0.06606016 -2.39938843 -1.78759619 -2.9149475   1.08128069 -7.89860458]
2020-08-18 09:48:56,687 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:48:58,681 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [  2.03349073  -3.47087169   1.17245578  -1.97297202   2.0354545
  -0.25307502  -1.05127382  -3.46428901  -5.24245083   2.97744362
  -0.07918983 -11.36220692]
2020-08-18 09:48:58,691 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:49:00,679 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.47765164 -0.08638996 -1.71098217 -0.60193577 -0.31534658  2.46924814
 -1.84383071 -0.57193249 -1.51924512 -1.12649637 -1.87859751 -0.43330779]
2020-08-18 09:50:34,611 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 09:50:34,890 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 09:50:43,388 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:45,573 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.31017054 -0.32436194 -0.89205705 -0.11742156  2.76781201  0.28663368
  3.36036975 -5.26709686 -0.54044955 -3.13303517 -1.09774034 -4.16770655]
2020-08-18 09:50:45,589 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:47,645 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.5481801  -0.04657285 -0.75846912  0.95413358 -0.73161465 -0.90464751
  0.73160335 -2.91249641 -3.67200856  0.94821534 -1.47446892 -2.72516243]
2020-08-18 09:50:47,655 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:49,733 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.42914302  2.90054758 -1.10680611 -2.42424862 -0.73831993  3.76097998
 -1.71369071  0.3271213  -0.12550645 -0.26421731 -3.06002054  0.46536176]
2020-08-18 09:50:49,745 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:51,775 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.08752778172492981, best pos: [-2.14629935 -0.22608465 -0.58635596 -0.50976411 -0.73308872  5.82761523
  0.12539887 -1.09172608 -0.14063323 -0.46767292 -1.98758636  0.10398555]
2020-08-18 09:50:51,786 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:53,745 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.75478189  0.73737806 -4.95410694 -3.0902044  -0.18097627  4.14999747
 -2.2347555   4.60179326 -0.46656072 -0.48665581 -1.85572223 -2.25260158]
2020-08-18 09:50:53,755 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:55,651 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.898779    1.11142448 -1.20570435 -2.9365278   0.85435456  3.1019451
  0.63887616 -3.27134828  2.22433891 -1.90113919 -4.49464784 -1.09323767]
2020-08-18 09:50:55,661 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:57,563 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.3387368   1.78172928 -3.62068831 -2.19564581 -2.13196305  4.29179628
 -0.82629995  1.50194704 -0.39116288  0.91937628 -3.98383723  0.42556699]
2020-08-18 09:50:57,574 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:50:59,463 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.4931948482990265, best pos: [-0.07139964  0.67522732 -2.11017017 -2.20465058 -0.43665788  0.56522799
  0.59490303 -2.48670356  0.69083894 -2.8913893   0.36831998 -1.62596294]
2020-08-18 09:50:59,473 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:01,394 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.75401322 -0.43127919 -1.69918436 -5.69465175 -0.26996654  7.64152192
 -0.30835258 -3.60341802  0.72847781 -3.54828188 -1.95344112 -1.29686734]
2020-08-18 09:51:01,405 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:03,446 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.76474966  0.75780941 -4.03114036 -2.96706877 -1.01405372  1.20409166
 -3.5164763   5.17812891 -2.54394801 -0.04271351 -0.78524324 -5.00932002]
2020-08-18 09:51:03,472 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:05,339 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.26961407  1.256335   -2.27789028 -2.70505471 -1.43539028  9.10308747
  0.38638834 -2.29122082 -0.42926186 -5.99145846 -1.51448875 -1.34950964]
2020-08-18 09:51:05,350 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:07,242 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.87952059  1.38783913 -0.48512332 -2.06204528 -0.44046119  4.99550374
 -1.61423761  1.4709577  -0.54640563 -0.89420832 -1.33099162 -2.01548891]
2020-08-18 09:51:07,252 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:09,282 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.82274913 -0.82985398 -0.46367365 -1.00795748 -1.68594837  1.88706309
  1.12508727 -6.29681853 -4.105927    2.7545232  -0.36185654 -9.03652858]
2020-08-18 09:51:09,293 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:11,960 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.0069036  -0.03901808 -1.54044345 -0.11873853 -0.22027155 -0.91207936
  1.23457337 -2.54848067 -2.94806137  0.90356242 -0.82364482 -2.32840709]
2020-08-18 09:51:11,984 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:14,602 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.0754387   1.78609182 -1.13327569 -1.69921772 -1.04973078  3.57621618
 -1.43335273  0.47946188  0.535227   -0.33514081 -2.12758137 -0.7342512 ]
2020-08-18 09:51:14,615 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:16,833 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.6127164  -1.10512208 -1.78048872 -0.02871534  0.68603313 -1.67935984
  0.23830629 -2.70354694 -6.11993758  2.25014494 -3.34927977 -3.2789024 ]
2020-08-18 09:51:16,844 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:18,900 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.30573569  1.07097928 -0.91732346 -1.29911782  0.16400734  5.30557219
  1.29091308 -1.93214025  0.66631931 -1.00869722 -2.54653694  1.21970659]
2020-08-18 09:51:18,941 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:20,896 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.5414698123931885, best pos: [-0.34874594  0.79152693 -1.07448844 -2.18755022 -0.49444697  0.06188217
 -1.36514231  1.3788864   0.58263166 -0.59205062  0.15778412 -2.08155053]
2020-08-18 09:51:20,941 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:22,907 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ 0.50548155  0.50123523 -1.8537933   0.89282806 -0.54367627 -1.28858462
  0.87485749 -3.23179818 -2.93745824  0.51433843 -0.86228034 -3.2084982 ]
2020-08-18 09:51:22,941 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 09:51:24,897 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.04785531 -0.05596139 -2.38554821 -1.03610332 -2.72677999  6.37850236
 -4.49537572  3.08039499 -2.37834131  1.00336119 -2.48657778 -2.78950924]
2020-08-18 11:31:51,949 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 11:31:52,335 - tensorflow - INFO - Assets written to: FitModel/ChiSqDim/assets
2020-08-18 11:32:10,427 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:13,077 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.84465909 -1.15573191 -4.45775956 -0.89290252  1.66719072 -0.63455937
 -2.43272709 -1.00897468 -0.5708536  -0.42230355 -1.9790787  -5.58274044]
2020-08-18 11:32:13,088 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:15,564 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-0.65874719  0.54690105 -1.17285004 -0.92124728 -1.48179318 -1.49472362
 -2.01968674 -0.75976627 -5.70942555  2.04112896 -1.90470296 -3.48331198]
2020-08-18 11:32:15,578 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:18,038 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.12785939 -0.76709547 -5.3244199  -4.93975877 -1.79268966 -0.7188631
 -1.25525545 -1.55217251 -3.34044346 -0.45215603 -1.057681   -3.20844581]
2020-08-18 11:32:18,051 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:20,489 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.9380853   0.09014562 -1.76815154  1.18660595 -2.75331597  1.89547717
 -3.17145319 -2.14338466 -1.12907319 -1.4988188  -3.41755961 -0.76463271]
2020-08-18 11:32:20,503 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:23,105 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.92424743  1.7269032  -4.09816352 -4.32278916 -2.05916286  0.89537814
 -1.76574208 -1.01943159 -1.2927425  -1.43352039 -0.74594983 -3.63606938]
2020-08-18 11:32:23,116 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:25,602 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.42676062  0.0813172  -3.96814316 -2.76073713 -1.74784154  0.46067789
 -4.72294656 -0.55255226  0.2925975  -2.15581466 -1.37073849 -1.96613848]
2020-08-18 11:32:25,614 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:28,058 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.96171792  0.68709078 -3.66580991 -3.79521807 -1.44800001  0.15401915
 -2.11577247  1.03142708 -0.07074229  0.04336393 -0.97959709 -1.63581081]
2020-08-18 11:32:28,071 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:30,559 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.57665361  1.21057709 -1.96863858 -4.6486823  -1.84365385  2.33492426
 -3.87691672 -3.33282973  0.67457632 -3.50964774 -2.61344676 -3.83704803]
2020-08-18 11:32:30,571 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:33,001 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.05358461  1.2897683  -1.33297139 -4.21289283 -0.19840186  0.35277365
 -1.14315605 -0.50307052  1.77017488 -0.33434664 -1.05584681 -2.65120046]
2020-08-18 11:32:33,017 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:35,568 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-1.25126786  1.82405486 -1.25595431 -4.49486652 -2.95212242  0.92786549
 -2.43256562  0.95605144 -0.90013662 -0.16326599 -0.6394874  -1.87652297]
2020-08-18 11:32:35,581 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:38,006 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-4.35752639 -0.44641732 -2.3051041  -2.56653533  0.09351693 -0.46282809
 -2.92298522 -1.01228036  0.2191134  -0.51316474 -2.56174773 -1.01718111]
2020-08-18 11:32:38,021 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:40,473 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.37767237 -2.09279953 -3.27815596 -5.49210339 -4.35820202 -2.46517818
 -4.60759498 -3.50935178 -4.00467283 -1.78210178 -0.2463387  -5.79526614]
2020-08-18 11:32:40,485 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:42,891 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -8.67624317  -1.55688702  -3.55327513  -6.63508255  -5.49844322
  -5.16437742   0.3221613   -7.93330272 -11.06516801   1.06636834
  -0.97770645  -9.35892661]
2020-08-18 11:32:42,909 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:45,357 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -7.00666724  -0.13509659  -1.93102319  -4.08288669  -0.76319295
  -2.08035541  -1.65388866  -2.88904896  -4.74242904  -0.16021379
  -1.80247816 -11.79731683]
2020-08-18 11:32:45,370 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:47,820 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-2.9022765  -0.47972967 -2.3845588  -1.49025871 -2.54409557 -0.52384873
 -3.99861105  0.44242919 -2.67405779 -1.78465132 -0.87185962 -3.08766104]
2020-08-18 11:32:47,835 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:50,420 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.76784417 -0.66433425 -6.88759674 -2.17623014  3.44664548 -2.35590048
 -0.9665075  -0.27552631 -2.15420232 -0.94388893 -5.21055684 -4.41372536]
2020-08-18 11:32:50,434 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:52,881 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [ -0.67007666  -0.43988094 -15.58903634  -8.15403618  -3.07821108
   2.73515843  -1.66004114 -12.90350985  -5.08728293  -3.76156413
  -1.52442001 -11.33896594]
2020-08-18 11:32:52,892 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:55,321 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.3384753167629242, best pos: [ -0.72047815  -3.93231233  -6.37399851 -21.44733108  -2.43245312
   3.99190641   2.99452614  -1.48832838   3.67553216  -3.70097439
   1.52578556  -1.5418442 ]
2020-08-18 11:32:55,333 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:32:57,786 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-5.24685416 -1.81011082 -2.4808759  -5.99199996 -1.10351233 -1.89814348
 -2.0122981   0.75985662 -1.53085672  0.74759759 -1.16364034 -1.83231718]
2020-08-18 11:32:57,798 - pyswarms.single.global_best - INFO - Optimize for 100 iters with {'c1': 0.5, 'c2': 0.3, 'w': 0.9, 'k': 5, 'p': 2}
2020-08-18 11:33:00,234 - pyswarms.single.global_best - INFO - Optimization finished | best cost: 0.0, best pos: [-3.51747414  0.42798915 -0.35326992 -0.11441018 -2.82096479  0.27461726
 -2.98804883 -0.23168955 -0.11529332  0.82117859 -2.19918307 -2.21485948]
2020-08-18 11:52:04,774 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 11:52:04,983 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_mH2/assets
2020-08-18 11:57:32,345 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 11:57:32,581 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_mH2/assets
2020-08-18 11:59:56,213 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 11:59:56,412 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_mH3/assets
2020-08-18 12:02:32,378 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 12:02:32,589 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_mA/assets
2020-08-18 12:04:29,330 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 12:04:29,550 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_mHc/assets
2020-08-18 12:05:49,766 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 12:05:49,962 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_tbeta/assets
2020-08-18 12:06:51,815 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 12:06:52,017 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_tbeta/assets
2020-08-18 12:09:15,905 - tensorflow - WARNING - From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/resource_variable_ops.py:1817: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.
Instructions for updating:
If using Keras pass *_constraint arguments to layers.
2020-08-18 12:09:16,271 - tensorflow - INFO - Assets written to: FitModel/MultiDim/p_vs/assets
